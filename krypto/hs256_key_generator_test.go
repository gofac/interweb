package krypto

import (
	"encoding/base64"
	"testing"
)

func TestGenerateHS256Key(t *testing.T) {
	// Call the function to generate a key
	key, err := generateHS256Key()
	t.Log(key)

	// Check if any error occurred
	if err != nil {
		t.Errorf("Error generating HS256 key: %v", err)
	}

	// Decode the generated key from base64
	decodedKey, err := base64.URLEncoding.DecodeString(key)

	// Check if any error occurred during decoding
	if err != nil {
		t.Errorf("Error decoding base64 key: %v", err)
	}

	// Check if the length of the decoded key is correct (should be 32 bytes)
	if len(decodedKey) != 32 {
		t.Errorf("Invalid key length. Expected 32 bytes, got %d", len(decodedKey))
	}

	// Check if the key was actually generated by checking if it's not empty
	if key == "" {
		t.Error("Generated key is empty")
	}
}
